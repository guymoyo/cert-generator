# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------
  
variables:
  GITLAB_REGISTRY: "gitlab-registry.adorsys.de"
  GITLAB_IMAGE_NAME: "gitlab-registry.adorsys.de/gmo/tppserver"
  OPENSHIFT_REGISTRY: "openshift-registry.adorsys.de:443"
  OPENSHIFT_IMAGE_NAME: "openshift-registry.adorsys.de:443/oshift-learning/tppserver"
# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "build:src"    # build jar and provide as artifact
  - "build:image"  # dockerize jar and push to gitlab registry
  - "deploy"       # push to openshift registry (snapshot deployment) or release registry

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

cache:
  paths:
    - .m2/repository/
    - target/


build_java:
  image: maven:latest
  stage: "build:src"
  script:
    - mvn clean install -DskipTests

build_snapshot_image:
  stage: "build:image"
  only:
    - master
  tags:
    - aws_shell
  script:
    - docker build -t "$GITLAB_IMAGE_NAME:latest" .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY
    - docker push "$GITLAB_IMAGE_NAME:latest"

deploy_snapshot:
  stage: deploy
  only:
    - master
  tags:
    - aws_shell
  environment:
    name: integ
    url: https://tppserver.adorsys.de
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY
    - docker login -u openshift -p $OPENSHIFT_TOKEN $OPENSHIFT_REGISTRY
    - docker pull $GITLAB_IMAGE_NAME:latest
    - docker tag $GITLAB_IMAGE_NAME:latest $OPENSHIFT_IMAGE_NAME:latest
    - docker push $OPENSHIFT_IMAGE_NAME:latest
